<div class="meta"
description="Run multiple mutations in a request in Hasura"
keywords="hasura, docs, mutation, multiple mutations, request">

</div>

# Multiple mutations in a request

<div class="contents" backlinks="none" depth="1" local="">

Table of contents

</div>

## Execution

If multiple mutations are part of the same request, they are executed
**sequentially** in a single **transaction**. If any of the mutations
fail, all the executed mutations will be rolled back.

## Run multiple top level mutations in the same request

**Example:** Delete all `article` objects written by an author and
update the `author` object:

<div class="graphiql" view_only="" query="mutation reset_author {
  delete_article (
    where: {author_id: {_eq: 6}}
  ) {
    affected_rows
  }
  update_author (
    where: {id: {_eq: 6}}
    _set: {name: &quot;Cory&quot;}
  ) {
    returning {
      id
      name
      articles {
        id
        title
      }
    }
  }
}
:response:
{
    &quot;data&quot;: {
      &quot;delete_article&quot;: {
        &quot;affected_rows&quot;: 2
      },
      &quot;update_author&quot;: {
        &quot;returning&quot;: [
          {
            &quot;id&quot;: 6,
            &quot;name&quot;: &quot;Cory&quot;,
            &quot;articles&quot;: []
          }
        ]
      }
    }
  }">

</div>

## Insert an object and a nested object in the same mutation

If you are trying to insert multiple objects which have relationships
between them, you can use nested inserts.

**Example:** Insert a new `article` object with its `author` and return
the inserted article object with its author in the response:

<div class="graphiql" view_only="" query="mutation insert_article {
  insert_article(
    objects: [
      {
        title: &quot;Article 1&quot;,
        content: &quot;Sample article content&quot;,
        author: {
          data: {
            name: &quot;Cory&quot;
          }
        }
      }
    ]
  ) {
    affected_rows
    returning {
      id
      title
      author {
        id
        name
      }
    }
  }
}
:response:
{
  &quot;data&quot;: {
    &quot;insert_article&quot;: {
      &quot;affected_rows&quot;: 2,
      &quot;returning&quot;: [
        {
            &quot;id&quot;: 21,
            &quot;title&quot;: &quot;Article 1&quot;,
            &quot;author&quot;: {
              &quot;id&quot;: 11,
              &quot;name&quot;: &quot;Cory&quot;
            }
        }
      ]
    }
  }
}">

</div>
