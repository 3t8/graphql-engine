<div class="meta"
description="Set default field values for Postgres in Hasura"
keywords="hasura, docs, postgres, schema, default value">

</div>

# Postgres: Setting default values for fields

<div class="contents" backlinks="none" depth="1" local="">

Table of contents

</div>

Let's say you want certain fields to have their values set automatically
when not explicitly passed. You can do this in the following ways:

-   `Postgres defaults <postgres_defaults>`: configure default values,
    using fixed values or simple SQL functions, for columns in the table
    definition. E.g. an auto-incrementing `id`, a `created_at`
    timestamp, etc.
-   `Custom SQL functions <sql_functions_as_default>`: set up Postgres
    triggers which run custom SQL functions/stored procedures to set the
    values of certain columns on inserts/updates on the table. This is
    useful to set values of fields which depend on other fields passed
    in the input. e.g. set `submission_time` of an online quiz as 1 hour
    from the `start_time`.
-   `Role based column presets <column_presets>`: set up presets, using
    session variables or fixed values, that are applied when a row is
    created/updated with a particular `user role <roles_variables>`.
    E.g. set a `user_id` field automatically from a session
    variable/authorization header.
-   `Created_at / updated_at timestamps <created_updated_timestamps>`:
    set up `created_at` and `updated_at` timestamp values.

<div class="toctree" maxdepth="1" hidden="">

Postgres defaults \<postgres-defaults> Custom SQL functions
\<sql-functions> Role based column presets \<column-presets> Created_at
/ updated_at timestamps \<created-updated-timestamps>

</div>
