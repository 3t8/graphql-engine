<div class="meta" description="Rename Postgres relationships in Hasura"
keywords="hasura, docs, postgres, schema, relationship, rename">

</div>

# Postgres: Renaming relationships

<div class="contents" backlinks="none" depth="1" local="">

Table of contents

</div>

An existing relationship can be renamed as follows:

<div class="rst-class">

api_tabs

</div>

<div class="tabs">

<div class="tab">

Console

-   Head to `Data -> [table-name] -> Relationships` in the console
-   Drop the existing relationship
-   Recreate the relationship with the new name

</div>

<div class="tab">

CLI

You can rename a relationship by changing the relationship name in the
`tables.yaml` file inside the `metadata` directory:

``` yaml
- table:
    schema: public
    name: articles
  object_relationships:
  - name: author
    using:
      foreign_key_constraint_on: author_id
- table:
    schema: public
    name: authors
```

Apply the metadata by running:

``` bash
hasura metadata apply
```

</div>

<div class="tab">

API

You can rename a relationship by using the
`rename_relationship metadata API <rename_relationship>`:

``` http
POST /v1/query HTTP/1.1
Content-Type: application/json
X-Hasura-Role: admin

{
  "type": "rename_relationship",
  "args": {
    "table": "articles",
    "name": "article_details",
    "new_name": "article_detail"
  }
}
```

</div>

</div>

<div class="note">

<div class="title">

Note

</div>

You might not be allowed to drop a relationship if it has been
referenced elsewhere (e.g. in a permissions rule).

In this case you will have to delete the references first, rename the
relationship, and then re-add the references.

</div>
