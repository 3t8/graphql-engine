<div class="meta" description="Deriving Hasura actions"
keywords="hasura, docs, actions, debug, debugging">

</div>

# Debugging actions

<div class="contents" backlinks="none" depth="1" local="">

Table of contents

</div>

While you're developing actions for your application, to debug faster
you may want to see the exact details of the webhook call for the action
as well.

To do so, start the server in `debugging mode <dev-mode>`. In the case
of errors, the GraphQL response will contain debugging information of
the webhook calls in the `extensions.internal` field.

If you are using action transforms, then you will also see the
`transformed_request` inside the `request` field.

**For example**:

<div class="graphiql" view_only="" query="mutation {
    create_user(email: &quot;foo@bar.com&quot;, name: &quot;Foo&quot;){
      id
      user {
        name
        email
      }
    }
  }
:response:
{
  &quot;errors&quot;: [
    {
      &quot;message&quot;: &quot;expecting null, object or array of objects for action webhook response&quot;,
      &quot;extensions&quot;: {
        &quot;code&quot;: &quot;parse-failed&quot;,
        &quot;path&quot;: &quot;$&quot;,
        &quot;internal&quot;: {
          &quot;error&quot;: &quot;expecting null, object or array of objects for action webhook response&quot;,
          &quot;response&quot;: {
            &quot;status&quot;: 200,
            &quot;headers&quot;: [
              {
                &quot;value&quot;: &quot;application/json&quot;,
                &quot;name&quot;: &quot;Content-Type&quot;
              }
            ],
            &quot;body&quot;: &quot;[incorrect response]&quot;
          },
          &quot;request&quot;: {
            &quot;url&quot;: &quot;http://127.0.0.1:5593/invalid-response&quot;,
            &quot;headers&quot;: [],
            &quot;body&quot;: {
              &quot;action&quot;: {
                &quot;name&quot;: &quot;create_user&quot;
              },
              &quot;session_variables&quot;: {
                &quot;x-hasura-role&quot;: &quot;admin&quot;
              },
              &quot;input&quot;: {
                &quot;email&quot;: &quot;foo@boo.com&quot;,
                &quot;name&quot;: &quot;Foo&quot;
              },
              &quot;request_query&quot;: &quot;mutation {\n    create_user(email: \&quot;foo@bar.com\&quot;, name: \&quot;Foo\&quot;){\n      id\n      user {\n        name\n        email\n      }\n    }\n  }\n&quot;
            },
            &quot;transformed_request&quot;: {
              &quot;query_string&quot;: &quot;&quot;,
              &quot;body&quot;: &quot;[transformed body]&quot;,
              &quot;url&quot;: &quot;http://127.0.0.1:3000/abcd&quot;,
              &quot;headers&quot;: [
                [
                  &quot;Content-Type&quot;,
                  &quot;application/json&quot;
                ]
              ],
              &quot;method&quot;: &quot;PATCH&quot;,
              &quot;response_timeout&quot;: &quot;30000000&quot;
            },
          }
        }
      }
    }
  ]
}">

</div>

<div class="admonition">

Additional Resources

Introduction to Hasura Actions - [View
Recording](https://hasura.io/events/webinar/hasura-actions/?pg=docs&plcmt=body&cta=view-recording&tech=).

</div>
