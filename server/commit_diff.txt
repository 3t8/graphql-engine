commit 0ae53841156800dcf8758ed1a861e87dbb10fe11
Author: Phil Freeman <phil@hasura.io>
Date:   Thu Jul 23 13:39:26 2020 -0700

    Propagate the trace context to event triggers (#5409)

    * Propagate the trace context to event triggers

    * Handle missing trace and span IDs

    * Store trace context as one LOCAL

    * Add migrations

    * Documentation

    * changelog

    * Fix warnings

    * Respond to code review suggestions

    * Respond to code review

    * Undo changelog

    * Update CHANGELOG.md

    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

commit 2eab6a89aa7d00152dc5b10986f06937c8e6f71f
Author: Brandon Simmons <brandon.m.simmons@gmail.com>
Date:   Mon Jul 20 22:28:12 2020 -0400

    Fix latency buckets for telemetry data

    These must have gotten messed up during a refactor. As a consequence
    almost all samples received so far fall into the single erroneous 0 to
    1K seconds (originally supposed to be 1ms?) bucket.

    I also re-thought what the numbers should be, but these are still
    arbitrary and might want adjusting in the future.

commit 709460b9ce9cfc11309afe362f81d3db1e548a38
Author: Tirumarai Selvan <tiru@hasura.io>
Date:   Mon Jul 20 13:45:15 2020 +0530

    update pg-client (#5421)

commit 0dddbe9e9d519de98662643d66c7d04a45d8d670
Author: Phil Freeman <phil@hasura.io>
Date:   Wed Jul 15 03:40:48 2020 -0700

    Add MonadTrace and MonadExecuteQuery abstractions (#5383)

    Co-authored-by: Vamshi Surabhi <0x777@users.noreply.github.com>

(Done, but we should re-visit this, if we do query plan caching)
commit 20cbe9cfd3e90b91d3f4faf370b081fc3859cbde
Author: Auke Booij <auke@hasura.io>
Date:   Mon May 18 14:27:56 2020 +0200

    server: fix an introspection query caching issue (fix #4547) (#4661)

    Introspection queries accept variables, but we need to make sure to
    also touch the variables that we ignore, so that an introspection
    query is marked not reusable if we are not able to build a correct
    query plan for it.

    A better solution here would be to deal with such unused variables
    correctly, so that more introspection queries become reusable.

    An even better solution would be to type-safely track *how* to reuse
    which variables, rather than to split the reusage marking from the
    planning.

    Co-authored-by: Tirumarai Selvan <tiru@hasura.io>
